spring:
  application:
    name: t1-demo

  datasource:
    url: "jdbc:postgresql://192.168.43.48:5432/t1_demo"
    #url: "jdbc:postgresql://192.168.3.155:5432/t1_demo"
    username: "postgres"
    password: "123"
    driverClassName: org.postgresql.Driver
  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/db.changelog-master.xml
  kafka:
    #bootstrap-servers: 192.168.3.155:9092
    bootstrap-servers: 192.168.43.48:9092
    topic:
      metrics: t1_demo_metrics
      transactions: t1_demo_transactions
      accounts: t1_demo_accounts
      transactionsAccept : t1_demo_transaction_accept
      transactionsResult : t1_demo_transaction_result

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: t1-demo

  thymeleaf:
    enabled: true
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
    cache: false

  resources:
    add-mappings: true
    static-locations: classpath:/static/,classpath:/public/

security:
  token: samiyNadejniyTokenSrazuNad0ZamenitNaChtoN1budNormalnoe
  expiration: 12300000

external:
  service:
    url: http://localhost:8081

logging:
  level:
    ROOT: INFO
    org.apache.kafka: INFO
    org.hibernate.SQL: INFO
    #org.springframework.boot.autoconfigure: DEBUG
    #ru.t1.java.demo.aop.MetricsAspect: DEBUG
    #ru.t1.java.demo.kafka.KafkaMetricsProducer: INFO
    #ru.t1.java.demo.service.impl.AccountServiceImpl: DEBUG
    #ru.t1.java.demo.controller.AccountController: DEBUG


transaction:
  frequency:
    limit: 100
  time:
    period: 3600
  rejection: 10


DemoAnnotationStarter:
  kafka:
    #bootstrap-servers: 192.168.3.155:9092
    bootstrap-servers: 192.168.43.48:9092
    topic:
      metrics: t1_demo_metrics
    consumer:
      group-id: t1-demo
  datasource:
    url: jdbc:postgresql://192.168.43.48:5432/t1_demo
    username: "postgres"
    password: "123"
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true

---

spring:
  config:
    activate:
      on-profile: main
server:
  port: 8080

---
spring:
  config:
    activate:
      on-profile: second
server:
  port: 8081

